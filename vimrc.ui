" vim: ft=vim

if &term == "xterm"
	set t_Co=256
	"let g:solarized_termcolors=256
	"let g:solarized_contrast="high"
	"let g:solarized_visibility="high"
	"colorscheme solarized
	"colorscheme inkpot
	"colorscheme rdark-terminal
	"colorscheme 256-grayvim
	"colorscheme ir_black

    "colorscheme mayansmoke " light
	colorscheme lucius
endif

if has("gui_running")
	"colorscheme default
	"set bg=light
	"colorscheme lucius
	colorscheme rdark-terminal
	colorscheme 256-grayvim
	colorscheme lucius
	set guioptions=aegitc
	set toolbar=icons
	set toolbariconsize=tiny
	set lines=57
	set columns=145
	set cursorline
	set encoding=utf-8
	"set guifont=Fixed\ 14
	set guifont=Menlo\ Regular:h12

	map <Leader>fhh :set gfn=Lucida\ Console\ 70<CR>:set ls=0<CR>
	map <Leader>fb :set gfn=Terminus\ Bold\ 16<CR>
	map <Leader>fm :set gfn=Terminus\ Bold\ 15<CR>
endif

" statusline
set laststatus=2				" 2 to always show
set statusline=
set statusline+=[buf:\ %n]\ 			" buffer number
set statusline+=%f\                          	" file name

let g:scm_cache = {}
fun! ScmInfo()
	let l:key = getcwd()
	if ! has_key(g:scm_cache, l:key)
		if (isdirectory(getcwd() . "/.git"))
			let g:scm_cache[l:key] = "[" . substitute(readfile(getcwd() . "/.git/HEAD", "", 1)[0],
						\ "^.*/", "", "") . "] "
		else
			let g:scm_cache[l:key] = ""
		endif
	endif
	return g:scm_cache[l:key]
endfun

set statusline+=%{ScmInfo()}            	" git scm info
set statusline+=%h%1*%m%r%w%0* 			" flags
set statusline+=[%{strlen(&ft)?&ft:'none'},	" filetype
set statusline+=%{&encoding},                	" encoding
set statusline+=%{&fileformat}]              	" file format
"set statusline+=%{$(getcwd()##*/)}]             " pwd
set statusline+=%=				" right align
set statusline+=0x%-8B\ 			" current char
set statusline+=%-14.(%l,%c%V%)\ %<%P		" offset

if has('title') && (has('gui_running') || &title)
	set titlestring=
	set titlestring+=%f		 				" file name
	set titlestring+=%h%m%r	 				" flags
	set titlestring+=\ -\ %{v:progname}				" program name
	set titlestring+=\ -\ %{substitute(getcwd(),\ '/Volumes/HDD/proger',\ '~',\ '')}  " working directory
endif

